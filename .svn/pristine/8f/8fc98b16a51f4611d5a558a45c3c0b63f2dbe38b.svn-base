// **********************************************************
// Assignment2:


// Student1: Marcus Pasquariello
// UTORID user_name: pasqua39
// UT Student #: 1006258477
// Author: Marcus Pasquariello
//
// Student2: Aliel Jacob Roxas
// UTORID user_name: roxasal1
// UT Student #: 1005954781
// Author: Aliel Jacob Roxas
//
// Student3: Danny Liu
// UTORID user_name: liuhai6
// UT Student #: 1004258000
// Author: Danny Liu
//
// Student4: Brandon Lam
// UTORID user_name: lambran3
// UT Student #: 1003383484
// Author: Brandon Lam
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// I have also read the plagiarism section in the course info
// sheet of CSC B07 and understand the consequences.
// *********************************************************

package commands;

import filesystem.Directory;
import filesystem.File;
import filesystem.FileSystem;
import handling.InputParser;
import handling.StandardError;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import output.Output;

/**
 * Echo has the responsible for create a file and/or editing a file. 
 * it can also to print out message on the mock shell.
 * 
 * @author Marcus, Danny
 */
public class Echo extends OutputCommand {

  private static final long serialVersionUID = 1L;
  /**
   * echo append object use for append content to a file.
   */
  EchoAppend echoAppendObj = new EchoAppend();

  /**
   * echo overwrite object use for overwrite content on a file.
   */
  EchoOverwrite echoOverwriteObj = new EchoOverwrite();

  /**
   * Setup valid argument counts for echo and its documentation.
   * 
   * @param validArgumentCounts Stores All the valid number of Argument counts
   *        for echo
   * 
   */
  public Echo(int[] validArgumentCounts) {
    super(validArgumentCounts);
    this.documentation = "echo STRING [> OUTFILE]"
        + "\n\tIf OUTFILE is not provided, print STRING on the shell. "
        + "\n\tOtherwise, put STRING into file OUTFILE. This creates a new "
        + "\n\tfile if OUTFILE does not exists and erases the old contents "
        + "\n\tif OUTFILE already exists.\n\n" + "echo STRING >> OUTFILE"
        + "\n\t Like the previous command, but appends instead of overwrites.";
  }


  /**
   * This class either call output print out a text message, or either append to
   * or overwrite the message to a text file given an operator and a name.
   * 
   * @param shellInput Arrays of command arguments
   */
  @Override
  public void execute(String[] shellInput) {
    /*
     * list must be size 1 or 3, if it's 3, the second element must be either
     * ">" or ">>"
     */
    String[] arguments = super.getArguments(shellInput);
    // invalid echo command
    if (arguments == null) {
      return;
    }
    super.execute(arguments);
    if (!isCountValid) {
      return;
    }
    // String already parsed
    String text = arguments[0];

    handleOutput(text);   
  }

}
